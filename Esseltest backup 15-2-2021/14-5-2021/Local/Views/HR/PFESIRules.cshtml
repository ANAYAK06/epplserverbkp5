@model EsselTestLocalApplication.Models.HR.PFESIRules
<div class="container">
    <div class="col-md-10">
        <h5 style="text-align:left;font-weight:bold;margin-bottom:-1%">PF Rules</h5>
    </div>
    <div class="col-md-10"><hr class="separationHr" /></div>

    <div class="col-md-10 rowspace">
        <div class="col-md-3">
            @Html.LabelFor(model => model.EmployeeContribution)
            @Html.TextBoxFor(model => model.EmployeeContribution, htmlAttributes: new { @class = "form-control", @id = "txtPFEmployeeContribution", onkeypress = "return ValidateAmount(this,event);" })
        </div>
        <div class="col-md-3">
            @Html.LabelFor(model => model.EmployerContribution)
            @Html.TextBoxFor(model => model.EmployerContribution, htmlAttributes: new { @class = "form-control", @id = "txtPFEmployerContribution", onkeypress = "return ValidateAmount(this,event);" })
        </div>
        <div class="col-md-3">
            @Html.LabelFor(model => model.PFAdminCharge)
            @Html.TextBoxFor(model => model.PFAdminCharge, htmlAttributes: new { @class = "form-control", @id = "txtPFAdminCharge", onkeypress = "return ValidateAmount(this,event);" })
        </div>
        <div class="col-md-3 rowspace">
            <div class="form-group">
                @Html.LabelFor(model => model.PFEffectDate)
                @Html.TextBoxFor(model => model.PFEffectDate, "{0:dd-MMM-yyyy}", htmlAttributes: new { @class = "form-control date-picker", @id = "txtPFWithEffectDate", @readOnly = "true" })
            </div>
        </div>
        <div class="col-md-3">
            @Html.LabelFor(model => model.PFDCA)
            @Html.DropDownListFor(model => model.PFDCA, new SelectList(Model.DCACodes, "DCACode", "DCAIDSTR"), "-Please Select-", htmlAttributes: new { @class = "form-control dropdown-toggle", @id = "ddlPFDCA", onchange = "PFDCAChange()" })
        </div>
        <div class="col-md-3">
            @Html.LabelFor(model => model.PFSubDCA)
            @Html.DropDownListFor(model => model.PFSubDCA, new SelectList(Model.PFSubDCACodes, "SubDCACode", "SubDCAIDSTR"), "-Please Select-", htmlAttributes: new { @class = "form-control dropdown-toggle", @id = "ddlPFSubDCA" })
        </div>
        <div class="col-md-3">
            @Html.LabelFor(model => model.PFEmployeeDCA)
            @Html.DropDownListFor(model => model.PFEmployeeDCA, new SelectList(Model.DCACodes, "DCACode", "DCAIDSTR"), "-Please Select-", htmlAttributes: new { @class = "form-control dropdown-toggle", @id = "ddlPFEmpDCA", onchange = "PFEmployeeDCAChange()" })
        </div>
        <div class="col-md-3">
            @Html.LabelFor(model => model.PFEmployeeSubDCA)
            @Html.DropDownListFor(model => model.PFEmployeeSubDCA, new SelectList(Model.PFEmployeeSubDCACodes, "SubDCACode", "SubDCAIDSTR"), "-Please Select-", htmlAttributes: new { @class = "form-control dropdown-toggle", @id = "ddlPFEmpSubDCA" })
        </div>
    </div>
    <div class="col-md-10">
        <br />
        <h5 style="text-align:left;font-weight:bold;margin-bottom:-1%">ESI Rules</h5>
    </div>
    <div class="col-md-10"><hr class="separationHr" /></div>
    <div class="col-md-10 rowspace">
        <div class="row">
            <div class="col-md-3">
                @Html.LabelFor(model => model.ESISalaryLimit)
                @Html.TextBoxFor(model => model.ESISalaryLimit, htmlAttributes: new { @class = "form-control", @id = "txtESISalaryLimit", onkeypress = "return ValidateAmount(this,event);" })
            </div>
            <div class="col-md-3">
                @Html.LabelFor(model => model.ESIEmployerPercentage)
                @Html.TextBoxFor(model => model.ESIEmployerPercentage, htmlAttributes: new { @class = "form-control", @id = "txtESIEmployerContribution", onkeypress = "return ValidateAmount(this,event);" })
            </div>
            <div class="col-md-3">
                @Html.LabelFor(model => model.ESIPercentage)
                @Html.TextBoxFor(model => model.ESIPercentage, htmlAttributes: new { @class = "form-control", @id = "txtESIEmployeeContribution", onkeypress = "return ValidateAmount(this,event);" })
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    @Html.LabelFor(model => model.ESIEffectDate)
                    @Html.TextBoxFor(model => model.ESIEffectDate, "{0:dd-MMM-yyyy}", htmlAttributes: new { @class = "form-control date-picker", @id = "txtESIWithEffectDate", @readOnly = "true" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-3">
                @Html.LabelFor(model => model.ESIDCA)
                @Html.DropDownListFor(model => model.ESIDCA, new SelectList(Model.DCACodes, "DCACode", "DCAIDSTR"), "-Please Select-", htmlAttributes: new { @class = "form-control dropdown-toggle", @id = "ddlESIDCA", onchange = "ESIDCAChange()" })
            </div>
            <div class="col-md-3">
                @Html.LabelFor(model => model.ESISubDCA)
                @Html.DropDownListFor(model => model.ESISubDCA, new SelectList(Model.ESISubDCACodes, "SubDCACode", "SubDCAIDSTR"), "-Please Select-", htmlAttributes: new { @class = "form-control dropdown-toggle", @id = "ddlESISubDCA" })
            </div>
            @*<div class="col-md-3">
                @Html.LabelFor(model => model.ESIEmployeeDCA)
                @Html.DropDownListFor(model => model.ESIEmployeeDCA, new SelectList(Model.DCACodes, "DCACode", "DCAIDSTR"), "-Please Select-", htmlAttributes: new { @class = "form-control dropdown-toggle", @id = "ddlESIEmpDCA", onchange = "ESIEmpDCAChange()" })
            </div>

            <div class="col-md-3">
                @Html.LabelFor(model => model.ESIEmployeeSubDCA)
                @Html.DropDownListFor(model => model.ESIEmployeeSubDCA, new SelectList(Model.ESIEmployeeSubDCACodes, "SubDCACode", "SubDCAIDSTR"), "-Please Select-", htmlAttributes: new { @class = "form-control dropdown-toggle", @id = "ddlESIEmpSubDCA" })
            </div>*@
        </div>
    </div>
    <div class="col-md-10 text-right">
        <br />
        <button class="btn btn1 btn-success" id="btnPFESITDSSubmit" onclick="SubmitPFESITDSData()">Submit</button>
        <button class="btn btn1 btn-success" id="btnPFESITDSUpdate" onclick="SubmitPFESITDSData()">Update</button>
        <button class="btn btn1 btn-success" id="btnPFESITDSReset" onclick="ResetPFESITDSData()">Reset</button>
    </div>

</div>
<div class="row rowspace">
    <div class="text-center">
        <br />
        <div id="divPFESIInfoMsg" class="alert alert-danger hidden">
        </div>
    </div>
</div>
<div id="divgridpfesi">
    @Html.Action("PFESIHistoryGrid", "HR")
</div>
<script>
    $(document).ready(function () {
        //Start of PF,ESI,TDS *************************************************************
     
        if (@Model.PFAdminCharge>0) {//update data
            $("#txtPFWithEffectDate").datepicker({
                dateFormat: 'dd-M-yy',
                changeMonth: true,
                changeYear: true,
                showOn: "button",
                buttonText: "<i class ='glyphicon glyphicon-calendar'></i>",
                yearRange: "-100:+1",
            }).datepicker("setDate", '@Model.PFEffectDate');
            $("#txtESIWithEffectDate").datepicker({
                dateFormat: 'dd-M-yy',
                changeMonth: true,
                changeYear: true,
                showOn: "button",
                buttonText: "<i class ='glyphicon glyphicon-calendar'></i>",
                yearRange: "-100:+1",
            }).datepicker("setDate", '@Model.ESIEffectDate');
            $("#btnPFESITDSUpdate").removeClass("hidden");
            $("#btnPFESITDSSubmit").addClass("hidden");
            $("#btnPFESITDSSubmit").prop('disabled', false);
            $("#btnPFESITDSUpdate").prop('disabled', false);
            @*$("#txtPFWithEffectDate").datepicker("setDate", '@Model.PFEffectDate');
            $("#txtESIWithEffectDate").datepicker("setDate", '@Model.ESIEffectDate');*@

            $("#divgridpfesi").removeClass("hidden");
        }
        else {//first time rule set
            $("#btnPFESITDSUpdate").addClass("hidden");
            $("#btnPFESITDSSubmit").removeClass("hidden");
            $("#btnPFESITDSSubmit").prop('disabled', false);
            $("#btnPFESITDSUpdate").prop('disabled', false);
            $("#txtPFWithEffectDate").datepicker({
                dateFormat: 'dd-M-yy',
                changeMonth: true,
                changeYear: true,
                showOn: "button",
                buttonText: "<i class ='glyphicon glyphicon-calendar'></i>",
                yearRange: "-100:+1",
            });
            $("#txtESIWithEffectDate").datepicker({
                dateFormat: 'dd-M-yy',
                changeMonth: true,
                changeYear: true,
                showOn: "button",
                buttonText: "<i class ='glyphicon glyphicon-calendar'></i>",
                yearRange: "-100:+1",
            });
            $("#divgridpfesi").addClass("hidden");
        }
    });
    //Start of PF,ESI,TDS *************************************************************
    function SubmitPFESITDSData() {
        var errorMsg = "";
        isValid = true;
        var PFEmployeePercent = $('#txtPFEmployeeContribution').val();
        var PFEmployerPercent = $('#txtPFEmployerContribution').val();
        var PFAdminCharge = $('#txtPFAdminCharge').val();
        var PFEffectdate = $('#txtPFWithEffectDate').val();

        var EsiSalarylmt = $("#txtESISalaryLimit").val();
        var EsiemployeePercent = $("#txtESIEmployeeContribution").val();
        var EmployerPercent = $("#txtESIEmployerContribution").val();
        var EsiDate = $('#txtESIWithEffectDate').val();

        var pfdcaindex = $("#ddlPFDCA option:selected").index();
        var pfsubdcaindex = $("#ddlPFSubDCA option:selected").index();
        var esidcaindex = $("#ddlESIDCA option:selected").index();
        var esisubdcaindex = $("#ddlESISubDCA option:selected").index();
        //debugger;
        var pfdca = $("#ddlPFDCA option:selected").val();
        var pfsubdca = $("#ddlPFSubDCA option:selected").val();
        var esidca = $("#ddlESIDCA option:selected").val();
        var esisubdca = $("#ddlESISubDCA option:selected").val();


        var employeepfdcaindex = $("#ddlPFEmpDCA option:selected").index();
        var employeepfsubdcaindex = $("#ddlPFEmpSubDCA option:selected").index();
        //var employeeesidcaindex = $("#ddlESIEmpDCA option:selected").index();
        //var employeeesisubdcaindex = $("#ddlESIEmpSubDCA option:selected").index();
        //debugger;
        var employeepfdca = $("#ddlPFEmpDCA option:selected").val();
        var employeepfsubdca = $("#ddlPFEmpSubDCA option:selected").val();
        //var employeeesidca = $("#ddlESIEmpDCA option:selected").val();
        //var employeeesisubdca = $("#ddlESIEmpSubDCA option:selected").val();

        if (PFEmployeePercent === "" || PFEmployeePercent === "0" || PFEmployeePercent === 0 || PFEmployeePercent === "0.0") {
            errorMsg += "<p style='margin-top:-5px!important;'>Enter PF Employee Contribution</p>";
            isValid = false;
        }
        if (PFEmployerPercent === "" || PFEmployerPercent === "0" || PFEmployerPercent === 0 || PFEmployerPercent === "0.0") {
            errorMsg += "<p style='margin-top:-5px!important;'>Enter PF Employer Contribution </p>";
            isValid = false;
        }
        if (PFAdminCharge === "" || PFAdminCharge === "0" || PFAdminCharge === 0 || PFAdminCharge === "0.0") {
            errorMsg += "<p style='margin-top:-5px!important;'>Enter PF Admin Charge</p>";
            isValid = false;
        }
        if (PFEffectdate === "" ) {
            errorMsg += "<p style='margin-top:-5px!important;'>Enter PF Effective Date</p>";
            isValid = false;
        }
        if (EsiSalarylmt === "" || EsiSalarylmt === "0" || EsiSalarylmt === 0 || EsiSalarylmt === "0.0") {
            errorMsg += "<p style='margin-top:-5px!important;'>Enter ESI Applicable Salary</p>";
            isValid = false;
        }
        if (EsiemployeePercent === "" || EsiemployeePercent === "0" || EsiemployeePercent === 0 || EsiemployeePercent === "0.0" ) {
            errorMsg += "<p style='margin-top:-5px!important;'>Enter ESI Employee Contribution</p>";
            isValid = false;
        }
        if (EmployerPercent === "" || EmployerPercent === "0" || EmployerPercent === 0 || EmployerPercent === "0.0") {
            errorMsg += "<p style='margin-top:-5px!important;'>Enter ESI Employer Contribution</p>";
            isValid = false;
        }
        if (EsiDate === "" ) {
            errorMsg += "<p style='margin-top:-5px!important;'>Enter ESI Effective Datee</p>";
            isValid = false;
        }
        if (pfdcaindex === 0) {
            errorMsg += "<p style='margin-top:-5px!important;'>Select PF Account Head</p>";
            isValid = false;
        }
        if (pfsubdcaindex === 0) {
            errorMsg += "<p style='margin-top:-5px!important;'>Select PF SubAccount Head</p>";
            isValid = false;
        }
        if (esidcaindex === 0) {
            errorMsg += "<p style='margin-top:-5px!important;'>Select ESI Account Head</p>";
            isValid = false;
        }
        if (esisubdcaindex === 0) {
            errorMsg += "<p style='margin-top:-5px!important;'>Select ESI SubAccount Head</p>";
            isValid = false;
        }

        if (employeepfdcaindex === 0) {
            errorMsg += "<p style='margin-top:-5px!important;'>Select Employee PF Account Head</p>";
            isValid = false;
        }
        if (employeepfsubdcaindex === 0) {
            errorMsg += "<p style='margin-top:-5px!important;'>Select Employee PF SubAccount Head</p>";
            isValid = false;
        }
        //if (employeeesidcaindex === 0) {
        //    errorMsg += "<p style='margin-top:-5px!important;'>Select Employee ESI Account Head</p>";
        //    isValid = false;
        //}
        //if (employeeesisubdcaindex === 0) {
        //    errorMsg += "<p style='margin-top:-5px!important;'>Select Employee ESI SubAccount Head</p>";
        //    isValid = false;
        //}
        if (!isValid) {
            var finalerror = "<div style='align:center'><p>Please enter all required fields!</p>";
            $("#divPFESIInfoMsg").text("");
            $("#divPFESIInfoMsg").append(finalerror + errorMsg + "</div>");
            $("#divPFESIInfoMsg").addClass("alert-danger");
            $("#divPFESIInfoMsg").removeClass("hidden alert-success");
        }
        else {
            $("#divPFESIInfoMsg").text("");
            $("#divPFESIInfoMsg").addClass("hidden");

            let data = {
                EmployeeContribution: PFEmployeePercent,
                EmployerContribution: PFEmployerPercent,
                PFAdminCharge: PFAdminCharge,
                PFEffectDate: PFEffectdate,
                ESISalaryLimit: EsiSalarylmt,
                ESIPercentage: EsiemployeePercent,
                ESIEffectDate: EsiDate,
                PFDCA: pfdca,
                PFSubDCA: pfsubdca,
                ESIDCA: esidca,
                ESISubDCA: esisubdca,
                PFEmployeeDCA: employeepfdca,
                PFEmployeeSubDCA: employeepfsubdca,
                //ESIEmployeeDCA: employeeesidca,
                //ESIEmployeeSubDCA: employeeesisubdca,
                ESIEmployerPercentage: EmployerPercent
            };
            addFailMsg = "Error Occurred While Adding.";
            $("#btnPFESITDSSubmit").prop('disabled', true);
            $("#btnPFESITDSUpdate").prop('disabled', true);
            //alert('submit');
            //debugger;
            $.ajax({
                type: 'POST',
                dataType: 'json',
                url: '/HR/SaveHRPFESIRule',
                data: { objHRRules: data },
                success: function (Data) {
                    // alert("Hi");
                    if (Data.saveStatus === "Submited") {
                        // location.reload();
                        //$("#txtMinWageEffectiveDate").datepicker("setDate", 'dateToday');
                        //$('#txtMinWageAmount').val("");
                        //$("#ddlMinWageSkillName").prop('selectedIndex', 0);
                        //$("#divPFESIInfoMsg").text("Rule Added Successfully");
                        //$("#divPFESIInfoMsg").removeClass("hidden alert-danger");
                        //$("#divPFESIInfoMsg").addClass("alert-success");
                        $('#liPFESI').trigger('click');
                    }
                    else {
                        $("#divPFESIInfoMsg").text(addFailMsg);
                        $("#divPFESIInfoMsg").addClass("alert-danger");
                        $("#divPFESIInfoMsg").removeClass("hidden alert-success");
                        $("#btnPFESITDSSubmit").prop('disabled', false);
                        $("#btnPFESITDSUpdate").prop('disabled', false);
                    }
                   
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    $("#divPFESIInfoMsg").text(addFailMsg);
                    $("#divPFESIInfoMsg").addClass("alert-danger");
                    $("#divPFESIInfoMsg").removeClass("hidden alert-success");
                    $("#btnPFESITDSSubmit").prop('disabled', false);
                    $("#btnPFESITDSUpdate").prop('disabled', false);
                }
            });
        }


    }
    function ResetPFESITDSData() {
        $('#liPFESI').trigger('click');
    }

    function ESIDCAChange() {
        ////debugger;
        let dcaindex = $("#ddlESIDCA option:selected").index();
        let dca = $("#ddlESIDCA option:selected").val();
        var sdcaddl = $("#ddlESISubDCA");
        if (dcaindex == 0) {
            sdcaddl.empty().append('<option selected="selected" value="-Please Select-">-Please Select-</option>');
        }
        else {
            $.ajax({
                type: "POST",
                url: "/HR/GetSubDCAbyDCA",
                data: "{DCACode:'" + dca + "'}",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {

                    sdcaddl.empty().append('<option selected="selected" value="0">-Please Select-</option>');
                    $.each(data, function () {
                        sdcaddl.append($("<option></option>").val(this['SubDCACode']).html(this['SubDCAIDSTR']));
                    });
                },
                failure: function (response) {
                },
                error: function (response) {
                }
            });
        }
    }
    function PFDCAChange() {
       // //debugger;
        let dcaindex = $("#ddlPFDCA option:selected").index();
        let dca = $("#ddlPFDCA option:selected").val();
        var sdcaddl = $("#ddlPFSubDCA");
        if (dcaindex == 0) {
            sdcaddl.empty().append('<option selected="selected" value="-Please Select-">-Please Select-</option>');

        }
        else {
            $.ajax({
                type: "POST",
                url: "/HR/GetSubDCAbyDCA",
                data: "{DCACode:'" + dca + "'}",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {

                    sdcaddl.empty().append('<option selected="selected" value="0">-Please Select-</option>');
                    $.each(data, function () {
                        sdcaddl.append($("<option></option>").val(this['SubDCACode']).html(this['SubDCAIDSTR']));
                    });
                },
                failure: function (response) {
                },
                error: function (response) {
                }
            });
        }
    }
    function PFEmployeeDCAChange() {
        let dcaindex = $("#ddlPFEmpDCA option:selected").index();
        let dca = $("#ddlPFEmpDCA option:selected").val();
        var sdcaddl = $("#ddlPFEmpSubDCA");
        if (dcaindex == 0) {
            sdcaddl.empty().append('<option selected="selected" value="-Please Select-">-Please Select-</option>');

        }
        else {
            $.ajax({
                type: "POST",
                url: "/HR/GetSubDCAbyDCA",
                data: "{DCACode:'" + dca + "'}",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {

                    sdcaddl.empty().append('<option selected="selected" value="0">-Please Select-</option>');
                    $.each(data, function () {
                        sdcaddl.append($("<option></option>").val(this['SubDCACode']).html(this['SubDCAIDSTR']));
                    });
                },
                failure: function (response) {
                },
                error: function (response) {
                }
            });
        }

    }
    function ESIEmpDCAChange() {
        ////debugger;
        let dcaindex = $("#ddlESIEmpDCA option:selected").index();
        let dca = $("#ddlESIEmpDCA option:selected").val();
        var sdcaddl = $("#ddlESIEmpSubDCA");
        if (dcaindex == 0) {
            sdcaddl.empty().append('<option selected="selected" value="-Please Select-">-Please Select-</option>');
        }
        else {
            $.ajax({
                type: "POST",
                url: "/HR/GetSubDCAbyDCA",
                data: "{DCACode:'" + dca + "'}",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {

                    sdcaddl.empty().append('<option selected="selected" value="0">-Please Select-</option>');
                    $.each(data, function () {
                        sdcaddl.append($("<option></option>").val(this['SubDCACode']).html(this['SubDCAIDSTR']));
                    });
                },
                failure: function (response) {
                },
                error: function (response) {
                }
            });
        }
    }
</script>
