@model List<EsselTestLocalApplication.Models.HR.Doclist>
@using Newtonsoft.Json
@{
    var serializer = new System.Web.Script.Serialization.JavaScriptSerializer();
    serializer.MaxJsonLength = Int32.MaxValue;


    var DocumentJson = "";
    var EditDocumentJson = "";
    var Action = Session["EmpAction"].ToString();
    if (Action == "New")
    {

        DocumentJson = serializer.Serialize(((List<EsselTestLocalApplication.Models.HR.EmpDocument>)Session["EmpDocument"]).ToArray());
    }
    else
    {
        EditDocumentJson = serializer.Serialize(((List<EsselTestLocalApplication.Models.HR.EmpDocument>)Session["EditEmpDocument"]).ToArray());
    }
}
<div class="col-md-12 change-tab">
    <div class="strike1">
        <span>Documents</span>
    </div>
    <div class="tabledynamic">
        <br />
        <table id="DocumentTable" class="table order-list doctable dataTable">
            <thead>
                <tr>
                    <td style="text-align:center;color:#fff !important;background-color: #202447;">S.No</td>
                    <td style="text-align:center;color:#fff !important;background-color: #202447;">Name</td>
                    @*<td style="text-align:center;color:#fff !important">Preview</td>*@
                    <td style="text-align:center;color:#fff !important;background-color: #202447;"></td>
                </tr>
            </thead>
            <tbody>
                @{int count3 = 1; }


                @foreach (var item in Model)
                {
                    <tr>
                        <td style="text-align:center">@count3</td>
                        <td>
                            @*@Html.DisplayFor(modelItem => item.DocName)*@
                            @Html.DisplayFor(modelItem => item.Name)
                        </td>
                        @*<td style="text-align:center">
                                <img src="@item.Path" width="150" height="150" />
                            </td>*@

                        <td style="text-align:center">

                            <input type="button" class="ibtnshowPreview btn btn-md btn-danger" value="Preview" onclick="ShowPreview1(@serializer.Serialize(item))">
                            @*<input type="button" class="ibtnshowPreview btn btn-md btn-danger" value="Preview" onclick="ShowPreview('@item.Name')">*@
                            <input type="button" class="ibtnAdddocdelete btn btn-md btn-danger" value="Delete">
                        </td>

                    </tr>
                    count3++;
                }
            </tbody>

        </table>
    </div>
</div>
<div class="modal fade" id="PreviewModel" role="dialog" data-backdrop="static" data-keyboard="false">

</div>
<script>
    $(document).ready(function () {

        var docGrid = null;
        InitializeDocGrid();
        ////debugger;
        var Action = '@Session["EmpAction"]';
        if (Action !== "") {

            if (Action === "New") {
                var partData = @Html.Raw(JsonConvert.SerializeObject(@DocumentJson));
                //console.log(partData);
              
            $("#HiddenDocumentsData").val(partData);
            }
            else if (Action === "Edit") {
                 var partData1 = @Html.Raw(JsonConvert.SerializeObject(@EditDocumentJson));
                $("#UpdateHiddenDocumentsData").val(partData1);
            }
        }
        $("table.order-list.doctable").on("click", ".ibtnAdddocdelete", function (event) {
            var row = $(this).closest("tr");
            var name = $.trim(row.find("td").eq(1).html());
            var rowno = $.trim(row.find("td").eq(0).html());
            addFailMsg = "Error Occurred While Deleting.";
            $.ajax({
                type: 'POST',
                dataType: 'json',
                url: '/HR/DeleteEmpDocumentData',
                data: { DocName: name },
                success: function (Data) {
                    //alert("Hi");
                    if (Data.saveStatus === "Deleted") {
                         var Action1 = '@Session["EmpAction"]';
                        if (Action1 !== "") {
                            if (Action1 === "New") {
                                $("#divDocuments").load('/HR/EmpDocumentGrid');
                            }
                            else {
                                $("#divUpdateDocuments").load('/HR/EmpDocumentGrid');
                            }
                        }


                    }
                    else {
                        $("#divAddNewEmpInfoMsg").text(addFailMsg);
                        $("#divAddNewEmpInfoMsg").addClass("alert-danger");
                        $("#divAddNewEmpInfoMsg").removeClass("hidden alert-success");
                    }
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    $("#divAddNewEmpInfoMsg").text(addFailMsg);
                    $("#divAddNewEmpInfoMsg").addClass("alert-danger");
                    $("#divAddNewEmpInfoMsg").removeClass("hidden alert-success");
                }
            });
        });

        //$("table.order-list.doctable").on("click", ".ibtnshowPreview", function (event) {
        //    var row = $(this).closest("tr");
        //    var path = $.trim(row.find("td").eq(2).html());
        //    var rowno = $.trim(row.find("td").eq(0).html());
        //    var Doc = {
        //        DocName:,
        //        DocBinaryData:,
        //        Path:
        //                    }
        //    $.ajax({
        //        type: "POST",
        //        url: "/HR/DocumentPreview",
        //        data: { edData:},
        //        contentType: "application/json; charset=utf-8",
        //        dataType: 'html',
        //        success: function (data) {
        //            $('#ChildMemberModel').html(data);
        //            $('#ChildMemberModel').modal();
        //        }
        //    });
        //    //$('#PreviewModel').modal('show');
        //    //$('#Previewimg').attr('src', path);
        //});
    });
    function ReassignRowNoforDocGrid() {
        var rowno = 1;
        $("#DocumentTable tbody tr").each(function () {
            var currentRow = $(this);
            currentRow.find("td").eq(0).html(rowno);
            rowno++;
        });

    }
    function InitializeDocGrid() {
        docGrid = $('#DocumentTable').DataTable({
            info: false,
            destroy: false,
            paging: false,
            lengthChange: false,
            searching: false,
            ordering: false,
            pagingType: false,
            language: {
                "emptyTable": "No Documents Found"
            },
            "createdRow": function (row, data, index) {

            },
            pageLength: 10
        });

    }
    function ShowPreview(Modeldata) {
        //alert(Modeldata);
        //let dname = Modeldata;
        //var docdata = {
        //    Name: dname
        //}
        ////debugger;
        $.ajax({
                type: "POST",
                url: "/HR/DocumentPreview",
            data: { datadoc: Modeldata },
            //data: JSON.stringify({ datadoc: docdata }),
                contentType: "application/json; charset=utf-8",
                dataType: 'html',
                success: function (data) {
                    $('#PreviewModel').html(data);
                    $('#PreviewModel').modal();
                }
            });
    }
    function ShowPreview1(Modeldata) {
        //alert(Modeldata.Name);
        $.ajax({
            type: "POST",
            url: "/HR/DocumentPreview",
           // data: { datadoc: Modeldata },
            data: JSON.stringify({ datadoc: Modeldata }),
            contentType: "application/json; charset=utf-8",
            dataType: 'html',
            success: function (data) {
                $('#PreviewModel').html(data);
                $('#PreviewModel').modal();
            }
        });
    }
    
</script>
